#!/usr/bin/env ruby -wKU

# Bamify : generates the deploy.bam file for deploying using bam
# USAGE :
# bamify [path_to_project]
begin 
  require "bam_helpers"
rescue LoadError
  require "rubygems"
  require "bam_helpers"
end

include BamHelpers

def template
"
# Bam Deploy File
# ---------------
# All you have to do is change all the variables below...
# the ip or hostname of the server, can use the following conventions for this variable:
#   - server_name # => if you have server_name setup in ~/.ssh/config
#   - username@host
@server = 'login@yourhost.com'
# the location on the server don't forget to append the slash/
# make sure that it's the parent folder that you are uploading to,
# for example:
#   instead of...
#     @to = '~/public_html/your_site/'
#   do...
#     @to = '~/public_html/'
@to = '~/location/to/your/web/site/or/app/'

# add list of file to always include in deployments
@always_include = %w()

# pre_deploy_tasks : These are things that you can run locally before deployment
# @pre_deploy_tasks = ['rm -rf cache/*']
# @pre_deploy_tasks = []

# post_deploy_tasks : These are things that you can run locally before deployment
# @post_deploy_tasks = ['rm -rf cache/*']
# @post_deploy_tasks = []
"
end

def add_ignore_bam
  `touch .gitignore` unless File.exists?(".gitignore")
  no_bam_found = (`cat .gitignore | grep deploy.bam` == "")
  `echo deploy.bam >> .gitignore` if no_bam_found
end

def help_message
  <<-help
bamify [path_to_project]
  --ignore-bam: add bam.deploy file to .gitignore list
  help
end

if ARGV[0] == "--help"
  puts help_message
else
  path = ARGV[0] == "" ? ARGV[0] : Dir.pwd
  bam_path = File.join(path, "deploy.bam")
  File.open File.join(bam_path), "w+" do |file|
    file << template
  end
  add_ignore_bam if ARGV[0] == "--ignore-bam"
  puts wrap_borders("Bam! you're done! bam.deploy generated to : #{bam_path}")
  # TODO : add editor options 
end
